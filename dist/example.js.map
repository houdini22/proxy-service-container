{"version":3,"file":"example.js","mappings":"4dAkCA,QAlCMA,WAOJ,WAAYC,EAASC,I,4FAAc,0BANjB,IAMiB,sBAJZ,IAKrBC,KAAKF,QAAUA,EACfE,KAAKD,aAAeA,E,8CAGtB,SAAUE,GACR,QAASD,KAAKF,QAAQG,K,wBAGxB,SAAWA,EAAMC,GACf,IADqB,EACjBC,EAASH,KAAKF,QAAQG,GAGtBG,EAAe,GACfC,EAAY,EALK,E,25BAAA,EAETF,EAAOG,WAAWC,MAAM,sCACb,IAAM,IAAIC,MAAM,MAHlB,IAMrB,2BAA4B,KAAnBP,EAAmB,QACtBQ,EAAaT,KAAKD,aAAaE,EAAKS,QACpCD,EACFL,EAAaO,KAAKF,GAElBL,EAAaO,KAAKT,EAAKG,OAXN,8BAcrB,OAAOF,EAAOS,MAAMZ,KAAKa,MAAOT,Q,mBA9B9BP,G,kSCEAiB,EAAAA,W,qIACe,I,wBAEO,M,+CAM1B,SAAWb,EAAMc,GAAmD,IAAvChB,EAAuC,uDAAxB,GAAIiB,EAAoB,wDAQlE,OAP0C,IAAtCC,OAAOC,KAAKlB,KAAKmB,UAAUC,SAC7BJ,GAAa,GAEfhB,KAAKmB,SAASlB,GAAQ,IAAIJ,EAAQkB,EAAYhB,GAC1CiB,IACFhB,KAAKqB,eAAiBrB,KAAKmB,SAASlB,IAE/BD,O,kBAGT,SAAKC,GACH,IAAMqB,EAAUtB,KAAKuB,oBACrB,GAAID,EAAQE,UAAUvB,GAAO,4BAFTC,EAES,iCAFTA,EAES,kBAC3B,OAAOoB,EAAQG,WAAWxB,EAAMC,GAElC,OAAOY,EAAuBY,gB,qBAGhC,SAAQzB,GAA4B,kCAAXC,EAAW,iCAAXA,EAAW,kBAClC,IAAMyB,EAAS,GASf,OARAV,OAAOC,KAAKlB,KAAKmB,UAAUS,SAAQ,SAACC,GAClC,IAAMP,EAAU,EAAKQ,WAAWD,GAC5BP,EAAQE,UAAUvB,GACpB0B,EAAOE,GAAeP,EAAQG,WAAWxB,EAAMC,GAE/CyB,EAAOE,GAAef,EAAuBY,iBAG1CC,I,oBAGT,SAAOI,EAA4B9B,GAAoC,kCAAnBC,EAAmB,iCAAnBA,EAAmB,kBACrE,IAAMyB,EAAS,GAaf,OAZAI,EAAYH,SAAQ,SAACC,GACnB,GAAI,EAAKG,WAAWH,GAAc,CAChC,IAAMP,EAAU,EAAKQ,WAAWD,GAC5BP,EAAQE,UAAUvB,GACpB0B,EAAOE,GAAeP,EAAQG,WAAWxB,EAAMC,GAE/CyB,EAAOE,GAAef,EAAuBY,mBAG/CC,EAAOE,GAAef,EAAuBmB,kBAG1CN,I,+BAGT,SAAkB1B,GAChB,MAAmB,iBAARA,GACLD,KAAKgC,WAAW/B,IAClBD,KAAKqB,eAAiBrB,KAAK8B,WAAW7B,GAC/BD,MAGJc,EAAuBmB,iB,+BAGhC,WACE,OAAOjC,KAAKqB,iB,wBAGd,SAAWpB,GACT,QAASD,KAAKmB,SAASlB,K,wBAGzB,SAAWA,GACT,OAAOD,KAAKmB,SAASlB,Q,mBA7EnBa,G,EAAAA,EAAAA,iBAKoB,G,EALpBA,EAAAA,kBAOqB,GA0E3B,YClFIoB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5E3B,OAAO6B,eAAeP,EAASK,EAAK,CAAEG,YAAY,EAAMC,IAAKL,EAAWC,MCJ3ET,EAAoBU,EAAI,CAACI,EAAKC,IAAUjC,OAAOkC,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAoBmB,EAAKf,IACH,oBAAXgB,QAA0BA,OAAOC,aAC1CvC,OAAO6B,eAAeP,EAASgB,OAAOC,YAAa,CAAEC,MAAO,WAE7DxC,OAAO6B,eAAeP,EAAS,aAAc,CAAEkB,OAAO,K,IC8BnD9B,EA5BA+B,E,MAAAA,EAAM,IAAIC,EAHiBC,EAAQ,KACmBC,wBAItDC,WAAW,WAAY,CACvBC,KAAM,SAAUC,EAAaC,EAAGC,EAAaC,EAAGC,GAU5C,OAPAC,QAAQC,IAAI,uBAAwBN,EAAaC,EAAGC,EAAaC,EAAGC,GAC/DpE,KAAKuE,KAGNF,QAAQC,IAAItE,MAFZA,KAAKuE,KAAO,EAKT,qBAEZ,CAECL,YAAa,oBACbF,YAAa,sBAGjBN,EAAII,WAAW,WAAY,CACvBC,KAAM,SAAUE,EAAGE,EAAGC,GAElB,OADAC,QAAQC,IAAI,uBAAwBL,EAAGE,EAAGC,GACnC,yBAEZ9B,GAAW,GAIdX,EAAS+B,EAAIL,KAAK,OAAQ,EAAG,EAAG,GAChCgB,QAAQC,IAAI,WAAY3C,GAExB+B,EAAIc,kBAAkB,YAEtB7C,EAAS+B,EAAIL,KAAK,OAAQ,EAAG,EAAG,GAChCgB,QAAQC,IAAI,WAAY3C,GAExBA,EAAS+B,EAAIe,QAAQ,OAAQ,EAAG,EAAG,GAEnCJ,QAAQC,IAAI,WAAY3C,GAExBA,EAAS+B,EAAIL,KAAK,wBAAyB,SAC3CgB,QAAQC,IAAI,WAAY3C,GAExBA,EAAS+B,EAAIe,QAAQ,wBAAyB,GAAI,GAAI,IACtDJ,QAAQC,IAAI,WAAY3C,GAExBA,EAAS+B,EAAIc,kBAAkB,wBAC/BH,QAAQC,IAAI,WAAY3C,GAExBA,EAAS+B,EAAIgB,OAAO,CAAC,YAAa,OAAQ,GAAI,GAAI,IAClDL,QAAQC,IAAI,WAAY3C,G","sources":["webpack://proxy-service-container/./src/classes/Service.tsx","webpack://proxy-service-container/./src/classes/ProxyServiceContainer.tsx","webpack://proxy-service-container/webpack/bootstrap","webpack://proxy-service-container/webpack/runtime/define property getters","webpack://proxy-service-container/webpack/runtime/hasOwnProperty shorthand","webpack://proxy-service-container/webpack/runtime/make namespace object","webpack://proxy-service-container/./examples/main.tsx"],"sourcesContent":["class Service {\n  methods: object = {};\n\n  dependencies: object = {};\n\n  _this: {};\n\n  constructor(methods, dependencies) {\n    this.methods = methods;\n    this.dependencies = dependencies;\n  }\n\n  hasMethod(name) {\n    return !!this.methods[name];\n  }\n\n  callMethod(name, args) {\n    let method = this.methods[name];\n    let match = method.toString().match(/^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m);\n    let argsNames = (match[1] || \"\").split(\",\");\n    let argsToInject = [];\n    let argsIndex = 0;\n    for (let name of argsNames) {\n      let dependency = this.dependencies[name.trim()];\n      if (dependency) {\n        argsToInject.push(dependency);\n      } else {\n        argsToInject.push(args[argsIndex++]);\n      }\n    }\n    return method.apply(this._this, argsToInject);\n  }\n}\n\nexport default Service;\n","import Service from \"./Service\";\n\nclass ProxyServicesContainer {\n  services: object = {};\n\n  defaultService: Service = null;\n\n  static ERR_NO_METHOD = -1;\n\n  static ERR_NO_SERVICE = -2;\n\n  addService(name, methodsObj, dependencies = {}, setDefault = false) {\n    if (Object.keys(this.services).length === 0) {\n      setDefault = true;\n    }\n    this.services[name] = new Service(methodsObj, dependencies);\n    if (setDefault) {\n      this.defaultService = this.services[name];\n    }\n    return this;\n  }\n\n  call(name: string, ...args: any) {\n    const service = this.getDefaultService();\n    if (service.hasMethod(name)) {\n      return service.callMethod(name, args);\n    }\n    return ProxyServicesContainer.ERR_NO_METHOD;\n  }\n\n  callAll(name: string, ...args: any) {\n    const result = {};\n    Object.keys(this.services).forEach((serviceName) => {\n      const service = this.getService(serviceName);\n      if (service.hasMethod(name)) {\n        result[serviceName] = service.callMethod(name, args);\n      } else {\n        result[serviceName] = ProxyServicesContainer.ERR_NO_METHOD;\n      }\n    });\n    return result;\n  }\n\n  callOn(arrServices: Array<string>, name: string, ...args: any): object {\n    const result = {};\n    arrServices.forEach((serviceName) => {\n      if (this.hasService(serviceName)) {\n        const service = this.getService(serviceName);\n        if (service.hasMethod(name)) {\n          result[serviceName] = service.callMethod(name, args);\n        } else {\n          result[serviceName] = ProxyServicesContainer.ERR_NO_METHOD;\n        }\n      } else {\n        result[serviceName] = ProxyServicesContainer.ERR_NO_SERVICE;\n      }\n    });\n    return result;\n  }\n\n  setDefaultService(name: string): ProxyServicesContainer | number {\n    if (typeof name == \"string\") {\n      if (this.hasService(name)) {\n        this.defaultService = this.getService(name);\n        return this;\n      }\n    }\n    return ProxyServicesContainer.ERR_NO_SERVICE;\n  }\n\n  getDefaultService(): Service {\n    return this.defaultService;\n  }\n\n  hasService(name: string): boolean {\n    return !!this.services[name];\n  }\n\n  getService(name: string): Service {\n    return this.services[name];\n  }\n}\n\nexport default ProxyServicesContainer;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @author <baniczek@gmail.com>\n */\n\nlet ProxyServiceContainerLib = require('../src/main');\nlet ProxyServiceContainerClass = ProxyServiceContainerLib.ProxyServiceContainer;\n\nlet sc1 = new ProxyServiceContainerClass();\n\nsc1.addService('storage1', {\n    save: function (dependency2, a, dependency1, b, c) {\n        // dependency injection here - dependency1 and dependency2\n        // rest parameters are from sc1.call('save', 1, 2, 3); - so a === 1, b ===2, c === 3\n        console.log('storage1.save called', dependency2, a, dependency1, b, c);\n        if (!this.test) {\n            this.test = 1;\n        } else {\n            console.log(this);          // { test: 1 }\n                                        // this === plain object which remember set values\n        }\n        return 'storage 1 result';\n    }\n}, {\n    // dependency injections\n    dependency1: 'dependency1 value',\n    dependency2: 'dependency2 value'\n});\n\nsc1.addService('storage2', {\n    save: function (a, b, c) {\n        console.log('storage2.save called', a, b, c);\n        return 'storage2 result';\n    }\n}, undefined, true);\n\nlet result;\n\nresult = sc1.call('save', 1, 2, 3);                         // storage2.save called 1 2 3\nconsole.log('result =', result);                            // result = storage2 result\n\nsc1.setDefaultService('storage1');\n\nresult = sc1.call('save', 4, 5, 6);                         // storage1.save called dependency2 value 4 dependency1 value 5 6\nconsole.log('result =', result);                            // result = storage 1 result\n\nresult = sc1.callAll('save', 7, 8, 9);                      // storage1.save called dependency2 value 7 dependency1 value 8 9\n                                                            // storage2.save called 7 8 9\nconsole.log('result =', result);                            // result = { storage1: 'storage 1 result', storage2: 'storage2 result' }\n\nresult = sc1.call('not_existing_function', 'error');\nconsole.log('result =', result);                            // result = -1\n\nresult = sc1.callAll('not_existing_function', 10, 11, 12);\nconsole.log('result =', result);                            // result = { storage1: -1, storage2: -1 }\n\nresult = sc1.setDefaultService('not_existing_service');\nconsole.log('result =', result);                            // result = -2\n\nresult = sc1.callOn(['storage2'], 'save', 20, 21, 22);      // storage2.save called 20 21 22\nconsole.log('result =', result);                            // result = { storage2: 'storage2 result' }"],"names":["Service","methods","dependencies","this","name","args","method","argsToInject","argsIndex","toString","match","split","dependency","trim","push","apply","_this","ProxyServicesContainer","methodsObj","setDefault","Object","keys","services","length","defaultService","service","getDefaultService","hasMethod","callMethod","ERR_NO_METHOD","result","forEach","serviceName","getService","arrServices","hasService","ERR_NO_SERVICE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","sc1","ProxyServiceContainerClass","require","ProxyServiceContainer","addService","save","dependency2","a","dependency1","b","c","console","log","test","setDefaultService","callAll","callOn"],"sourceRoot":""}